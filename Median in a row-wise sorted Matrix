Given a row wise sorted matrix of size R*C where R and C are always odd, find the median of the matrix.

Example 1:

Input:
R = 3, C = 3
M = [[1, 3, 5], 
     [2, 6, 9], 
     [3, 6, 9]]
Output: 5
Explanation: Sorting matrix elements gives 
us {1,2,3,3,5,6,6,9,9}. Hence, 5 is median. 


solution:


class Solution{   
public:

    int countSmallerThanMid(vector<int>&A,int mid)
    {
        int low=0;
        int high=A.size()-1;
        while(low<=high)
        {
            int md=(low+high)>>1;
            if(A[md]<=mid)
            {
                low=md+1;
            }
            else{
                high=md-1;
            }
        }
        return low;
    }

    int median(vector<vector<int>> &matrix, int R, int C){
        int low=1;
        int high=1e9;
        while(low<=high)
        {
            int mid=(low+high)>>1;
            int count=0;
            for(int i=0;i<R;++i)
            {
                count+=countSmallerThanMid(matrix[i],mid);
            }
            if(count<=(R*C)/2)
            {
                low=mid+1;
            }
            else{
            high=mid-1;
            }
        }
        return low;
    }
};
